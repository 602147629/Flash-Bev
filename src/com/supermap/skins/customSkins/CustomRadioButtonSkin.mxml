<?xml version="1.0" encoding="utf-8"?>
<!--
/////////////////////////////////////////////////////////////////////////////////////////////
//
//	Copyright (c) 2013 SuperMap. All Rights Reserved.
//
//	Licensed under the Apache License, Version 2.0 (the "License");
//	you may not use this file except in compliance with the License.
//	You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
//	Unless required by applicable law or agreed to in writing, software
//	distributed under the License is distributed on an  "AS IS" BASIS,
//	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//	See the License for the specific language governing permissions and
//	limitations under the License.
//
///////////////////////////////////////////////////////////////////////////////////////////// 
-->
<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark RadioButton component.  

@see spark.components.RadioButton
@see spark.components.RadioButtonGroup

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabledStates="0.5">
	
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.RadioButton")]
		]]>
	</fx:Metadata> 
	
	<fx:Script fb:purpose="styling">
		/* Define the skin elements that should not be colorized. 
		For button, the graphics are colorized but the label is not. */
		static private const exclusions:Array = ["labelDisplay", "dot"];
		
		/**
		 * @private
		 */
		override public function get colorizeExclusions():Array {return exclusions;}
		
		/* Define the symbol fill items that should be colored by the "symbolColor" style. */
		static private const symbols:Array = ["dotFill"];
		
		/**
		 * @private
		 */
		override public function get symbolItems():Array {return symbols};
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			useChromeColor = true;
			super.initializationComplete();
		}
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			/** 
			 * @private 
			 */     
			private static const focusExclusions:Array = ["labelDisplay"];
			
			/**
			 *  @private
			 */
			override public function get focusSkinExclusions():Array { return focusExclusions;};
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="upAndSelected" stateGroups="selectedStates" />
		<s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
		<s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="disabledStates, selectedStates" />
	</s:states>
	
	<s:Group verticalCenter="0" width="14" height="14">
		<!-- drop shadow -->
		<s:Ellipse left="-1" top="-1" right="-1" bottom="-1">
			<s:stroke>
				<s:LinearGradientStroke rotation="90" weight="1">
					<s:GradientEntry color="0x000000" 
									 color.downStates="0xFFFFFF"
									 alpha="0.011"
									 alpha.downStates="0" />
					<s:GradientEntry color="0x000000" 
									 color.downStates="0xFFFFFF" 
									 alpha="0.121"
									 alpha.downStates="0.57" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Ellipse>
		
		<!-- fill -->
		<s:Ellipse left="1" top="1" right="1" bottom="1">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xffffff" 
									 alpha="0.3" />
					<s:GradientEntry color="0xffffff" 
									 alpha="0.3" />
				</s:LinearGradient>
			</s:fill>
		</s:Ellipse>
		
		<!-- border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
		<s:Ellipse left="0" top="0" right="0" bottom="0">
			<s:stroke>
				<s:LinearGradientStroke rotation="90" weight="1">
					<s:GradientEntry color="0x000000" />
					<s:GradientEntry color="0x000000" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Ellipse>
		
		<!--- Defines the appearance of the RadioButton's dot. To customize the appearance of the dot, create a custom RadioButtonSkin class. -->
		<s:Ellipse left="3" top="3" right="3" bottom="3">
			<s:fill>
				<s:LinearGradient>
					<s:GradientEntry color="0xffffff" alpha="0.6" alpha.selectedStates="0.03"/>
					<s:GradientEntry color="0xffffff" alpha="0.6" alpha.selectedStates="0.03"/>
				</s:LinearGradient>
			</s:fill>
		</s:Ellipse>
		
		<!-- dot -->
		<!--- Defines the appearance of the RadioButton's dot. To customize the appearance of the dot, create a custom RadioButtonSkin class. -->
		<s:Ellipse left="3" top="3" right="3" bottom="3" includeIn="selectedStates" id="dot" itemCreationPolicy="immediate">
			<s:fill>
				<!--- @private
				Defines the appearance of the dot's fill. The default color is 0x000000. The default alpha is .9. -->
				<s:SolidColor id="dotFill" alpha="0.8" />
			</s:fill>
		</s:Ellipse>
		
		<s:Ellipse left="3" top="3" right="3" bottom="3" includeIn="selectedStates" >
			<s:stroke>
				<s:LinearGradientStroke>
					<s:GradientEntry color="{getStyle('symbolColor')}" alpha="0.3" />
					<s:GradientEntry color="{getStyle('symbolColor')}" alpha="0.7" />
					<s:GradientEntry color="{getStyle('symbolColor')}" alpha="0.3" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Ellipse>
	</s:Group>
	
	<!-- Label -->
	<!---  @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
	<s:Label id="labelDisplay"
			 textAlign="start"
			 verticalAlign="middle"
			 maxDisplayedLines="1"
			 left="23" right="0" top="3" bottom="3" verticalCenter="0" 
			 color="0x000000"/>
	
</s:SparkSkin>
